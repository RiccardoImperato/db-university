1. Selezionare tutti gli studenti iscritti al Corso di Laurea in Economia

SELECT
    COUNT(`students`.`id`) AS `numero_studenti`,
    `degrees`.`name` AS `corso_laurea`
FROM
    `degrees`
INNER JOIN `students` ON `degrees`.`id` = `students`.`degree_id`
WHERE
    `degrees`.`name` = "corso di laurea in economia"
GROUP BY
    `corso_laurea`;



2. Selezionare tutti i Corsi di Laurea Magistrale del Dipartimento di Neuroscienze

SELECT
    COUNT(`degrees`.`id`) AS `id`,
    `degrees`.`name` AS `corso_laurea`,
    `degrees`.`level` AS `livello`,
    `departments`.`name` AS `dipartimento`
FROM
    `degrees`
INNER JOIN `departments` ON `degrees`.`department_id` = `departments`.`id`
WHERE
    `degrees`.`level` = "magistrale" AND `departments`.`name` = "Dipartimento di Neuroscienze"
GROUP BY
    `corso_laurea`,
    `livello`,
    `dipartimento`;



3. Selezionare tutti i corsi in cui insegna Fulvio Amato (id=44)

SELECT
    `teachers`.*,
    `courses`.*
FROM
    `course_teacher`
INNER JOIN `courses` ON `courses`.`id` = `course_teacher`.`course_id`
INNER JOIN `teachers` ON `teachers`.`id` = `course_teacher`.`teacher_id`
WHERE
    `teachers`.`name` = "Fulvio" AND `teachers`.`surname` = "Amato";



4. Selezionare tutti gli studenti con i dati relativi al corso di laurea a cui
sono iscritti e il relativo dipartimento, in ordine alfabetico per cognome e
nome

SELECT
    `students`.`surname`,
    `students`.`name`,
    `degrees`.`name` AS `Iscrizione`,
    `departments`.`name` AS `dipartimento`
FROM
    `students`
INNER JOIN `degrees` ON `degrees`.`id` = `students`.`degree_id`
INNER JOIN `departments` ON `departments`.`id` = `degrees`.`department_id`
ORDER BY
    `students`.`surname`,
    `students`.`name`;



5. Selezionare tutti i corsi di laurea con i relativi corsi e insegnanti

SELECT
    `degrees`.`name` AS `corso_laurea`,
    `courses`.`name` AS `corso`,
    `teachers`.`name` AS `nome_insegnante`,
    `teachers`.`surname` AS `cognome_insegnante`
FROM
    `degrees`
INNER JOIN `courses` ON `degrees`.`id` = `courses`.`degree_id`
INNER JOIN `teachers` ON `courses`.`id` = `teachers`.`id`;



6. Selezionare tutti i docenti che insegnano nel Dipartimento di
Matematica (54)

SELECT DISTINCT
    `teachers`.`surname` AS `cognome_insegnante`,
    `teachers`.`name` AS `nome_insegnante`,
    `departments`.`name` AS `dipartimento`
FROM
    `teachers`
INNER JOIN `course_teacher` ON `teachers`.`id` = `course_teacher`.`teacher_id`
INNER JOIN `courses` ON `course_teacher`.`course_id` = `courses`.`id`
INNER JOIN `degrees` ON `courses`.`degree_id` = `degrees`.`id`
INNER JOIN `departments` ON `degrees`.`department_id` = `departments`.`id`
WHERE
    `departments`.`name` = "Dipartimento di Matematica"
ORDER BY
    `teachers`.`surname`,
    `teachers`.`name`;



7. BONUS: Selezionare per ogni studente il numero di tentativi sostenuti per ogni esame, 
    stampando anche il voto massimo. Successivamente, filtrare i tentativi con voto minimo 18.
SELECT
    students.id,
    students.name,
    students.surname,
    courses.name,
    COUNT(exam_student.vote) AS `numero_tentativi`,
   MAX(exam_student.vote) AS `voto_massimo`,
   MIN(exam_student.vote) AS `voto_minimo`
FROM
    `students`
INNER JOIN `exam_student` ON `students`.`id` = `exam_student`.`student_id`
INNER JOIN `exams` ON `exam_student`.`exam_id` = `exams`.`id`
INNER JOIN `courses` ON `exams`.`course_id` = `courses`.id
GROUP BY
    students.id,
    courses.id
HAVING `voto_minimo` > 18
